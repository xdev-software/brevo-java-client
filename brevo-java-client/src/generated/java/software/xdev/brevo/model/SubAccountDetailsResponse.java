/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import software.xdev.brevo.model.SubAccountDetailsResponsePlanInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * SubAccountDetailsResponse
 */
@JsonPropertyOrder({
  SubAccountDetailsResponse.JSON_PROPERTY_NAME,
  SubAccountDetailsResponse.JSON_PROPERTY_EMAIL,
  SubAccountDetailsResponse.JSON_PROPERTY_COMPANY_NAME,
  SubAccountDetailsResponse.JSON_PROPERTY_PLAN_INFO
})
@JsonTypeName("subAccountDetailsResponse")
public class SubAccountDetailsResponse {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_COMPANY_NAME = "companyName";
  private String companyName;

  public static final String JSON_PROPERTY_PLAN_INFO = "planInfo";
  private SubAccountDetailsResponsePlanInfo planInfo;

  public SubAccountDetailsResponse() {
  }

  public SubAccountDetailsResponse name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Name of the sub-account user
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public SubAccountDetailsResponse email(String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Email id of the sub-account organization
   * @return email
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }

  public SubAccountDetailsResponse companyName(String companyName) {
    
    this.companyName = companyName;
    return this;
  }

  /**
   * Sub-account company name
   * @return companyName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyName() {
    return companyName;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public SubAccountDetailsResponse planInfo(SubAccountDetailsResponsePlanInfo planInfo) {
    
    this.planInfo = planInfo;
    return this;
  }

  /**
   * Get planInfo
   * @return planInfo
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubAccountDetailsResponsePlanInfo getPlanInfo() {
    return planInfo;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanInfo(SubAccountDetailsResponsePlanInfo planInfo) {
    this.planInfo = planInfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubAccountDetailsResponse subAccountDetailsResponse = (SubAccountDetailsResponse) o;
    return Objects.equals(this.name, subAccountDetailsResponse.name) &&
        Objects.equals(this.email, subAccountDetailsResponse.email) &&
        Objects.equals(this.companyName, subAccountDetailsResponse.companyName) &&
        Objects.equals(this.planInfo, subAccountDetailsResponse.planInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, email, companyName, planInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubAccountDetailsResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    planInfo: ").append(toIndentedString(planInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      try {
        joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `email` to the URL query string
    if (getEmail() != null) {
      try {
        joiner.add(String.format("%semail%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEmail()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `companyName` to the URL query string
    if (getCompanyName() != null) {
      try {
        joiner.add(String.format("%scompanyName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCompanyName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `planInfo` to the URL query string
    if (getPlanInfo() != null) {
      joiner.add(getPlanInfo().toUrlQueryString(prefix + "planInfo" + suffix));
    }

    return joiner.toString();
  }

}


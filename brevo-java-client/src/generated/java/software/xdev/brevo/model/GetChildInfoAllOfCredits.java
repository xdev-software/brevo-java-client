/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Credits available for your child
 */
@JsonPropertyOrder({
  GetChildInfoAllOfCredits.JSON_PROPERTY_EMAIL_CREDITS,
  GetChildInfoAllOfCredits.JSON_PROPERTY_SMS_CREDITS
})
@JsonTypeName("getChildInfo_allOf_credits")
public class GetChildInfoAllOfCredits {
  public static final String JSON_PROPERTY_EMAIL_CREDITS = "emailCredits";
  @jakarta.annotation.Nullable
  private Long emailCredits;

  public static final String JSON_PROPERTY_SMS_CREDITS = "smsCredits";
  @jakarta.annotation.Nullable
  private Long smsCredits;

  public GetChildInfoAllOfCredits() {
  }

  public GetChildInfoAllOfCredits emailCredits(@jakarta.annotation.Nullable Long emailCredits) {
    
    this.emailCredits = emailCredits;
    return this;
  }

  /**
   * Email credits available for your child
   * @return emailCredits
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEmailCredits() {
    return emailCredits;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailCredits(@jakarta.annotation.Nullable Long emailCredits) {
    this.emailCredits = emailCredits;
  }

  public GetChildInfoAllOfCredits smsCredits(@jakarta.annotation.Nullable Long smsCredits) {
    
    this.smsCredits = smsCredits;
    return this;
  }

  /**
   * SMS credits available for your child
   * @return smsCredits
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SMS_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSmsCredits() {
    return smsCredits;
  }


  @JsonProperty(JSON_PROPERTY_SMS_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSmsCredits(@jakarta.annotation.Nullable Long smsCredits) {
    this.smsCredits = smsCredits;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetChildInfoAllOfCredits getChildInfoAllOfCredits = (GetChildInfoAllOfCredits) o;
    return Objects.equals(this.emailCredits, getChildInfoAllOfCredits.emailCredits) &&
        Objects.equals(this.smsCredits, getChildInfoAllOfCredits.smsCredits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailCredits, smsCredits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetChildInfoAllOfCredits {\n");
    sb.append("    emailCredits: ").append(toIndentedString(emailCredits)).append("\n");
    sb.append("    smsCredits: ").append(toIndentedString(smsCredits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `emailCredits` to the URL query string
    if (getEmailCredits() != null) {
      try {
        joiner.add(String.format("%semailCredits%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEmailCredits()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `smsCredits` to the URL query string
    if (getSmsCredits() != null) {
      try {
        joiner.add(String.format("%ssmsCredits%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSmsCredits()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}


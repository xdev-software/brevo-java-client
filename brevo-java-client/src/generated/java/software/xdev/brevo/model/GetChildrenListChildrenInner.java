/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import software.xdev.brevo.model.GetChildInfoAllOfApiKeys;
import software.xdev.brevo.model.GetChildInfoAllOfCredits;
import software.xdev.brevo.model.GetChildInfoAllOfStatistics;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * GetChildrenListChildrenInner
 */
@JsonPropertyOrder({
  GetChildrenListChildrenInner.JSON_PROPERTY_EMAIL,
  GetChildrenListChildrenInner.JSON_PROPERTY_FIRST_NAME,
  GetChildrenListChildrenInner.JSON_PROPERTY_LAST_NAME,
  GetChildrenListChildrenInner.JSON_PROPERTY_COMPANY_NAME,
  GetChildrenListChildrenInner.JSON_PROPERTY_CREDITS,
  GetChildrenListChildrenInner.JSON_PROPERTY_STATISTICS,
  GetChildrenListChildrenInner.JSON_PROPERTY_PASSWORD,
  GetChildrenListChildrenInner.JSON_PROPERTY_IPS,
  GetChildrenListChildrenInner.JSON_PROPERTY_API_KEYS,
  GetChildrenListChildrenInner.JSON_PROPERTY_ID
})
@JsonTypeName("getChildrenList_children_inner")
public class GetChildrenListChildrenInner {
  public static final String JSON_PROPERTY_EMAIL = "email";
  @jakarta.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  @jakarta.annotation.Nonnull
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  @jakarta.annotation.Nonnull
  private String lastName;

  public static final String JSON_PROPERTY_COMPANY_NAME = "companyName";
  @jakarta.annotation.Nonnull
  private String companyName;

  public static final String JSON_PROPERTY_CREDITS = "credits";
  @jakarta.annotation.Nullable
  private GetChildInfoAllOfCredits credits;

  public static final String JSON_PROPERTY_STATISTICS = "statistics";
  @jakarta.annotation.Nullable
  private GetChildInfoAllOfStatistics statistics;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  @jakarta.annotation.Nonnull
  private String password;

  public static final String JSON_PROPERTY_IPS = "ips";
  @jakarta.annotation.Nullable
  private List<String> ips = new ArrayList<>();

  public static final String JSON_PROPERTY_API_KEYS = "apiKeys";
  @jakarta.annotation.Nullable
  private GetChildInfoAllOfApiKeys apiKeys;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private Long id;

  public GetChildrenListChildrenInner() {
  }

  public GetChildrenListChildrenInner email(@jakarta.annotation.Nonnull String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Login Email
   * @return email
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@jakarta.annotation.Nonnull String email) {
    this.email = email;
  }

  public GetChildrenListChildrenInner firstName(@jakarta.annotation.Nonnull String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * First Name
   * @return firstName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(@jakarta.annotation.Nonnull String firstName) {
    this.firstName = firstName;
  }

  public GetChildrenListChildrenInner lastName(@jakarta.annotation.Nonnull String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Last Name
   * @return lastName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(@jakarta.annotation.Nonnull String lastName) {
    this.lastName = lastName;
  }

  public GetChildrenListChildrenInner companyName(@jakarta.annotation.Nonnull String companyName) {
    
    this.companyName = companyName;
    return this;
  }

  /**
   * Name of the company
   * @return companyName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCompanyName() {
    return companyName;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyName(@jakarta.annotation.Nonnull String companyName) {
    this.companyName = companyName;
  }

  public GetChildrenListChildrenInner credits(@jakarta.annotation.Nullable GetChildInfoAllOfCredits credits) {
    
    this.credits = credits;
    return this;
  }

  /**
   * Get credits
   * @return credits
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetChildInfoAllOfCredits getCredits() {
    return credits;
  }


  @JsonProperty(JSON_PROPERTY_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCredits(@jakarta.annotation.Nullable GetChildInfoAllOfCredits credits) {
    this.credits = credits;
  }

  public GetChildrenListChildrenInner statistics(@jakarta.annotation.Nullable GetChildInfoAllOfStatistics statistics) {
    
    this.statistics = statistics;
    return this;
  }

  /**
   * Get statistics
   * @return statistics
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetChildInfoAllOfStatistics getStatistics() {
    return statistics;
  }


  @JsonProperty(JSON_PROPERTY_STATISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatistics(@jakarta.annotation.Nullable GetChildInfoAllOfStatistics statistics) {
    this.statistics = statistics;
  }

  public GetChildrenListChildrenInner password(@jakarta.annotation.Nonnull String password) {
    
    this.password = password;
    return this;
  }

  /**
   * The encrypted password of child account
   * @return password
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(@jakarta.annotation.Nonnull String password) {
    this.password = password;
  }

  public GetChildrenListChildrenInner ips(@jakarta.annotation.Nullable List<String> ips) {
    
    this.ips = ips;
    return this;
  }

  public GetChildrenListChildrenInner addIpsItem(String ipsItem) {
    if (this.ips == null) {
      this.ips = new ArrayList<>();
    }
    this.ips.add(ipsItem);
    return this;
  }

  /**
   * IP(s) associated to a child account user
   * @return ips
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getIps() {
    return ips;
  }


  @JsonProperty(JSON_PROPERTY_IPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIps(@jakarta.annotation.Nullable List<String> ips) {
    this.ips = ips;
  }

  public GetChildrenListChildrenInner apiKeys(@jakarta.annotation.Nullable GetChildInfoAllOfApiKeys apiKeys) {
    
    this.apiKeys = apiKeys;
    return this;
  }

  /**
   * Get apiKeys
   * @return apiKeys
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetChildInfoAllOfApiKeys getApiKeys() {
    return apiKeys;
  }


  @JsonProperty(JSON_PROPERTY_API_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiKeys(@jakarta.annotation.Nullable GetChildInfoAllOfApiKeys apiKeys) {
    this.apiKeys = apiKeys;
  }

  public GetChildrenListChildrenInner id(@jakarta.annotation.Nullable Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * ID of the child
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable Long id) {
    this.id = id;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetChildrenListChildrenInner getChildrenListChildrenInner = (GetChildrenListChildrenInner) o;
    return Objects.equals(this.email, getChildrenListChildrenInner.email) &&
        Objects.equals(this.firstName, getChildrenListChildrenInner.firstName) &&
        Objects.equals(this.lastName, getChildrenListChildrenInner.lastName) &&
        Objects.equals(this.companyName, getChildrenListChildrenInner.companyName) &&
        Objects.equals(this.credits, getChildrenListChildrenInner.credits) &&
        Objects.equals(this.statistics, getChildrenListChildrenInner.statistics) &&
        Objects.equals(this.password, getChildrenListChildrenInner.password) &&
        Objects.equals(this.ips, getChildrenListChildrenInner.ips) &&
        Objects.equals(this.apiKeys, getChildrenListChildrenInner.apiKeys) &&
        Objects.equals(this.id, getChildrenListChildrenInner.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, firstName, lastName, companyName, credits, statistics, password, ips, apiKeys, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetChildrenListChildrenInner {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    password: ").append("*").append("\n");
    sb.append("    ips: ").append(toIndentedString(ips)).append("\n");
    sb.append("    apiKeys: ").append(toIndentedString(apiKeys)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `email` to the URL query string
    if (getEmail() != null) {
      try {
        joiner.add(String.format("%semail%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEmail()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `firstName` to the URL query string
    if (getFirstName() != null) {
      try {
        joiner.add(String.format("%sfirstName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFirstName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `lastName` to the URL query string
    if (getLastName() != null) {
      try {
        joiner.add(String.format("%slastName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `companyName` to the URL query string
    if (getCompanyName() != null) {
      try {
        joiner.add(String.format("%scompanyName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCompanyName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `credits` to the URL query string
    if (getCredits() != null) {
      joiner.add(getCredits().toUrlQueryString(prefix + "credits" + suffix));
    }

    // add `statistics` to the URL query string
    if (getStatistics() != null) {
      joiner.add(getStatistics().toUrlQueryString(prefix + "statistics" + suffix));
    }

    // add `password` to the URL query string
    if (getPassword() != null) {
      try {
        joiner.add(String.format("%spassword%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPassword()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `ips` to the URL query string
    if (getIps() != null) {
      for (int i = 0; i < getIps().size(); i++) {
        try {
          joiner.add(String.format("%sips%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getIps().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `apiKeys` to the URL query string
    if (getApiKeys() != null) {
      joiner.add(getApiKeys().toUrlQueryString(prefix + "apiKeys" + suffix));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}


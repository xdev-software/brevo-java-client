/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Feature accessiblity given to the user. (Required only if status is active)
 */
@JsonPropertyOrder({
  GetCorporateInvitedUsersListUsersInnerFeatureAccess.JSON_PROPERTY_USER_MANAGEMENT,
  GetCorporateInvitedUsersListUsersInnerFeatureAccess.JSON_PROPERTY_API_KEYS,
  GetCorporateInvitedUsersListUsersInnerFeatureAccess.JSON_PROPERTY_MY_PLAN,
  GetCorporateInvitedUsersListUsersInnerFeatureAccess.JSON_PROPERTY_APPS_MANAGEMENT
})
@JsonTypeName("getCorporateInvitedUsersList_users_inner_feature_access")
public class GetCorporateInvitedUsersListUsersInnerFeatureAccess {
  public static final String JSON_PROPERTY_USER_MANAGEMENT = "user_management";
  private List<String> userManagement = new ArrayList<>();

  public static final String JSON_PROPERTY_API_KEYS = "api_keys";
  private List<String> apiKeys = new ArrayList<>();

  public static final String JSON_PROPERTY_MY_PLAN = "my_plan";
  private List<String> myPlan = new ArrayList<>();

  public static final String JSON_PROPERTY_APPS_MANAGEMENT = "apps_management";
  private List<String> appsManagement = new ArrayList<>();

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess() {
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess userManagement(List<String> userManagement) {
    
    this.userManagement = userManagement;
    return this;
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess addUserManagementItem(String userManagementItem) {
    if (this.userManagement == null) {
      this.userManagement = new ArrayList<>();
    }
    this.userManagement.add(userManagementItem);
    return this;
  }

  /**
   * User management accessiblity.
   * @return userManagement
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUserManagement() {
    return userManagement;
  }


  @JsonProperty(JSON_PROPERTY_USER_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserManagement(List<String> userManagement) {
    this.userManagement = userManagement;
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess apiKeys(List<String> apiKeys) {
    
    this.apiKeys = apiKeys;
    return this;
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess addApiKeysItem(String apiKeysItem) {
    if (this.apiKeys == null) {
      this.apiKeys = new ArrayList<>();
    }
    this.apiKeys.add(apiKeysItem);
    return this;
  }

  /**
   * Api keys accessiblity.
   * @return apiKeys
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getApiKeys() {
    return apiKeys;
  }


  @JsonProperty(JSON_PROPERTY_API_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiKeys(List<String> apiKeys) {
    this.apiKeys = apiKeys;
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess myPlan(List<String> myPlan) {
    
    this.myPlan = myPlan;
    return this;
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess addMyPlanItem(String myPlanItem) {
    if (this.myPlan == null) {
      this.myPlan = new ArrayList<>();
    }
    this.myPlan.add(myPlanItem);
    return this;
  }

  /**
   * My plan accessiblity.
   * @return myPlan
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMyPlan() {
    return myPlan;
  }


  @JsonProperty(JSON_PROPERTY_MY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMyPlan(List<String> myPlan) {
    this.myPlan = myPlan;
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess appsManagement(List<String> appsManagement) {
    
    this.appsManagement = appsManagement;
    return this;
  }

  public GetCorporateInvitedUsersListUsersInnerFeatureAccess addAppsManagementItem(String appsManagementItem) {
    if (this.appsManagement == null) {
      this.appsManagement = new ArrayList<>();
    }
    this.appsManagement.add(appsManagementItem);
    return this;
  }

  /**
   * Apps management accessiblity | Not available in ENTv2
   * @return appsManagement
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPS_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAppsManagement() {
    return appsManagement;
  }


  @JsonProperty(JSON_PROPERTY_APPS_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppsManagement(List<String> appsManagement) {
    this.appsManagement = appsManagement;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCorporateInvitedUsersListUsersInnerFeatureAccess getCorporateInvitedUsersListUsersInnerFeatureAccess = (GetCorporateInvitedUsersListUsersInnerFeatureAccess) o;
    return Objects.equals(this.userManagement, getCorporateInvitedUsersListUsersInnerFeatureAccess.userManagement) &&
        Objects.equals(this.apiKeys, getCorporateInvitedUsersListUsersInnerFeatureAccess.apiKeys) &&
        Objects.equals(this.myPlan, getCorporateInvitedUsersListUsersInnerFeatureAccess.myPlan) &&
        Objects.equals(this.appsManagement, getCorporateInvitedUsersListUsersInnerFeatureAccess.appsManagement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userManagement, apiKeys, myPlan, appsManagement);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCorporateInvitedUsersListUsersInnerFeatureAccess {\n");
    sb.append("    userManagement: ").append(toIndentedString(userManagement)).append("\n");
    sb.append("    apiKeys: ").append(toIndentedString(apiKeys)).append("\n");
    sb.append("    myPlan: ").append(toIndentedString(myPlan)).append("\n");
    sb.append("    appsManagement: ").append(toIndentedString(appsManagement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `user_management` to the URL query string
    if (getUserManagement() != null) {
      for (int i = 0; i < getUserManagement().size(); i++) {
        try {
          joiner.add(String.format("%suser_management%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getUserManagement().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `api_keys` to the URL query string
    if (getApiKeys() != null) {
      for (int i = 0; i < getApiKeys().size(); i++) {
        try {
          joiner.add(String.format("%sapi_keys%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getApiKeys().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `my_plan` to the URL query string
    if (getMyPlan() != null) {
      for (int i = 0; i < getMyPlan().size(); i++) {
        try {
          joiner.add(String.format("%smy_plan%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getMyPlan().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `apps_management` to the URL query string
    if (getAppsManagement() != null) {
      for (int i = 0; i < getAppsManagement().size(); i++) {
        try {
          joiner.add(String.format("%sapps_management%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getAppsManagement().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    return joiner.toString();
  }

}


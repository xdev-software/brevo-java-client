/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import software.xdev.brevo.model.ComponentItems;
import software.xdev.brevo.model.VariablesItems;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * WhatsappCampTemplate
 */
@JsonPropertyOrder({
  WhatsappCampTemplate.JSON_PROPERTY_NAME,
  WhatsappCampTemplate.JSON_PROPERTY_CATEGORY,
  WhatsappCampTemplate.JSON_PROPERTY_LANGUAGE,
  WhatsappCampTemplate.JSON_PROPERTY_CONTAINS_BUTTON,
  WhatsappCampTemplate.JSON_PROPERTY_DISPLAY_HEADER,
  WhatsappCampTemplate.JSON_PROPERTY_HEADER_TYPE,
  WhatsappCampTemplate.JSON_PROPERTY_COMPONENTS,
  WhatsappCampTemplate.JSON_PROPERTY_HEADER_VARIABLES,
  WhatsappCampTemplate.JSON_PROPERTY_BODY_VARIABLES,
  WhatsappCampTemplate.JSON_PROPERTY_BUTTON_TYPE,
  WhatsappCampTemplate.JSON_PROPERTY_HIDE_FOOTER
})
public class WhatsappCampTemplate {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private String language;

  public static final String JSON_PROPERTY_CONTAINS_BUTTON = "contains_button";
  private Boolean containsButton;

  public static final String JSON_PROPERTY_DISPLAY_HEADER = "display_header";
  private Boolean displayHeader;

  public static final String JSON_PROPERTY_HEADER_TYPE = "header_type";
  private String headerType;

  public static final String JSON_PROPERTY_COMPONENTS = "components";
  private List<ComponentItems> components;

  public static final String JSON_PROPERTY_HEADER_VARIABLES = "header_variables";
  private List<VariablesItems> headerVariables;

  public static final String JSON_PROPERTY_BODY_VARIABLES = "body_variables";
  private List<VariablesItems> bodyVariables;

  public static final String JSON_PROPERTY_BUTTON_TYPE = "button_type";
  private String buttonType;

  public static final String JSON_PROPERTY_HIDE_FOOTER = "hide_footer";
  private Boolean hideFooter;

  public WhatsappCampTemplate() {
  }

  public WhatsappCampTemplate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * name of the template
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public WhatsappCampTemplate category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * description of the template
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }


  public WhatsappCampTemplate language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * language of the template
   * @return language
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(String language) {
    this.language = language;
  }


  public WhatsappCampTemplate containsButton(Boolean containsButton) {
    
    this.containsButton = containsButton;
    return this;
  }

   /**
   * Get containsButton
   * @return containsButton
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTAINS_BUTTON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getContainsButton() {
    return containsButton;
  }


  @JsonProperty(JSON_PROPERTY_CONTAINS_BUTTON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainsButton(Boolean containsButton) {
    this.containsButton = containsButton;
  }


  public WhatsappCampTemplate displayHeader(Boolean displayHeader) {
    
    this.displayHeader = displayHeader;
    return this;
  }

   /**
   * Get displayHeader
   * @return displayHeader
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayHeader() {
    return displayHeader;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayHeader(Boolean displayHeader) {
    this.displayHeader = displayHeader;
  }


  public WhatsappCampTemplate headerType(String headerType) {
    
    this.headerType = headerType;
    return this;
  }

   /**
   * type of header
   * @return headerType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeaderType() {
    return headerType;
  }


  @JsonProperty(JSON_PROPERTY_HEADER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeaderType(String headerType) {
    this.headerType = headerType;
  }


  public WhatsappCampTemplate components(List<ComponentItems> components) {
    
    this.components = components;
    return this;
  }

  public WhatsappCampTemplate addComponentsItem(ComponentItems componentsItem) {
    if (this.components == null) {
      this.components = new ArrayList<>();
    }
    this.components.add(componentsItem);
    return this;
  }

   /**
   * array of component item objects
   * @return components
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ComponentItems> getComponents() {
    return components;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponents(List<ComponentItems> components) {
    this.components = components;
  }


  public WhatsappCampTemplate headerVariables(List<VariablesItems> headerVariables) {
    
    this.headerVariables = headerVariables;
    return this;
  }

  public WhatsappCampTemplate addHeaderVariablesItem(VariablesItems headerVariablesItem) {
    if (this.headerVariables == null) {
      this.headerVariables = new ArrayList<>();
    }
    this.headerVariables.add(headerVariablesItem);
    return this;
  }

   /**
   * array of variables item object
   * @return headerVariables
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADER_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VariablesItems> getHeaderVariables() {
    return headerVariables;
  }


  @JsonProperty(JSON_PROPERTY_HEADER_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeaderVariables(List<VariablesItems> headerVariables) {
    this.headerVariables = headerVariables;
  }


  public WhatsappCampTemplate bodyVariables(List<VariablesItems> bodyVariables) {
    
    this.bodyVariables = bodyVariables;
    return this;
  }

  public WhatsappCampTemplate addBodyVariablesItem(VariablesItems bodyVariablesItem) {
    if (this.bodyVariables == null) {
      this.bodyVariables = new ArrayList<>();
    }
    this.bodyVariables.add(bodyVariablesItem);
    return this;
  }

   /**
   * array of variables item variables
   * @return bodyVariables
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BODY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VariablesItems> getBodyVariables() {
    return bodyVariables;
  }


  @JsonProperty(JSON_PROPERTY_BODY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBodyVariables(List<VariablesItems> bodyVariables) {
    this.bodyVariables = bodyVariables;
  }


  public WhatsappCampTemplate buttonType(String buttonType) {
    
    this.buttonType = buttonType;
    return this;
  }

   /**
   * Get buttonType
   * @return buttonType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUTTON_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getButtonType() {
    return buttonType;
  }


  @JsonProperty(JSON_PROPERTY_BUTTON_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setButtonType(String buttonType) {
    this.buttonType = buttonType;
  }


  public WhatsappCampTemplate hideFooter(Boolean hideFooter) {
    
    this.hideFooter = hideFooter;
    return this;
  }

   /**
   * Get hideFooter
   * @return hideFooter
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIDE_FOOTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHideFooter() {
    return hideFooter;
  }


  @JsonProperty(JSON_PROPERTY_HIDE_FOOTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHideFooter(Boolean hideFooter) {
    this.hideFooter = hideFooter;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WhatsappCampTemplate whatsappCampTemplate = (WhatsappCampTemplate) o;
    return Objects.equals(this.name, whatsappCampTemplate.name) &&
        Objects.equals(this.category, whatsappCampTemplate.category) &&
        Objects.equals(this.language, whatsappCampTemplate.language) &&
        Objects.equals(this.containsButton, whatsappCampTemplate.containsButton) &&
        Objects.equals(this.displayHeader, whatsappCampTemplate.displayHeader) &&
        Objects.equals(this.headerType, whatsappCampTemplate.headerType) &&
        Objects.equals(this.components, whatsappCampTemplate.components) &&
        Objects.equals(this.headerVariables, whatsappCampTemplate.headerVariables) &&
        Objects.equals(this.bodyVariables, whatsappCampTemplate.bodyVariables) &&
        Objects.equals(this.buttonType, whatsappCampTemplate.buttonType) &&
        Objects.equals(this.hideFooter, whatsappCampTemplate.hideFooter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, category, language, containsButton, displayHeader, headerType, components, headerVariables, bodyVariables, buttonType, hideFooter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WhatsappCampTemplate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    containsButton: ").append(toIndentedString(containsButton)).append("\n");
    sb.append("    displayHeader: ").append(toIndentedString(displayHeader)).append("\n");
    sb.append("    headerType: ").append(toIndentedString(headerType)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    headerVariables: ").append(toIndentedString(headerVariables)).append("\n");
    sb.append("    bodyVariables: ").append(toIndentedString(bodyVariables)).append("\n");
    sb.append("    buttonType: ").append(toIndentedString(buttonType)).append("\n");
    sb.append("    hideFooter: ").append(toIndentedString(hideFooter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      try {
        joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `category` to the URL query string
    if (getCategory() != null) {
      try {
        joiner.add(String.format("%scategory%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCategory()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `language` to the URL query string
    if (getLanguage() != null) {
      try {
        joiner.add(String.format("%slanguage%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLanguage()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `contains_button` to the URL query string
    if (getContainsButton() != null) {
      try {
        joiner.add(String.format("%scontains_button%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getContainsButton()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `display_header` to the URL query string
    if (getDisplayHeader() != null) {
      try {
        joiner.add(String.format("%sdisplay_header%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDisplayHeader()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `header_type` to the URL query string
    if (getHeaderType() != null) {
      try {
        joiner.add(String.format("%sheader_type%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHeaderType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `components` to the URL query string
    if (getComponents() != null) {
      for (int i = 0; i < getComponents().size(); i++) {
        if (getComponents().get(i) != null) {
          joiner.add(getComponents().get(i).toUrlQueryString(String.format("%scomponents%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `header_variables` to the URL query string
    if (getHeaderVariables() != null) {
      for (int i = 0; i < getHeaderVariables().size(); i++) {
        if (getHeaderVariables().get(i) != null) {
          joiner.add(getHeaderVariables().get(i).toUrlQueryString(String.format("%sheader_variables%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `body_variables` to the URL query string
    if (getBodyVariables() != null) {
      for (int i = 0; i < getBodyVariables().size(); i++) {
        if (getBodyVariables().get(i) != null) {
          joiner.add(getBodyVariables().get(i).toUrlQueryString(String.format("%sbody_variables%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `button_type` to the URL query string
    if (getButtonType() != null) {
      try {
        joiner.add(String.format("%sbutton_type%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getButtonType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `hide_footer` to the URL query string
    if (getHideFooter() != null) {
      try {
        joiner.add(String.format("%shide_footer%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHideFooter()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}


/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import software.xdev.brevo.model.SubAccountDetailsResponsePlanInfoCreditsEmails;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Credits quota and remaining credits on the sub-account
 */
@JsonPropertyOrder({
  SubAccountDetailsResponsePlanInfoCredits.JSON_PROPERTY_SMS,
  SubAccountDetailsResponsePlanInfoCredits.JSON_PROPERTY_EMAILS
})
@JsonTypeName("subAccountDetailsResponse_planInfo_credits")
public class SubAccountDetailsResponsePlanInfoCredits {
  public static final String JSON_PROPERTY_SMS = "sms";
  private Long sms;

  public static final String JSON_PROPERTY_EMAILS = "emails";
  private SubAccountDetailsResponsePlanInfoCreditsEmails emails;

  public SubAccountDetailsResponsePlanInfoCredits() {
  }

  public SubAccountDetailsResponsePlanInfoCredits sms(Long sms) {
    
    this.sms = sms;
    return this;
  }

   /**
   * SMS credits remaining on the sub-account
   * @return sms
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSms() {
    return sms;
  }


  @JsonProperty(JSON_PROPERTY_SMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSms(Long sms) {
    this.sms = sms;
  }

  public SubAccountDetailsResponsePlanInfoCredits emails(SubAccountDetailsResponsePlanInfoCreditsEmails emails) {
    
    this.emails = emails;
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubAccountDetailsResponsePlanInfoCreditsEmails getEmails() {
    return emails;
  }


  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmails(SubAccountDetailsResponsePlanInfoCreditsEmails emails) {
    this.emails = emails;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubAccountDetailsResponsePlanInfoCredits subAccountDetailsResponsePlanInfoCredits = (SubAccountDetailsResponsePlanInfoCredits) o;
    return Objects.equals(this.sms, subAccountDetailsResponsePlanInfoCredits.sms) &&
        Objects.equals(this.emails, subAccountDetailsResponsePlanInfoCredits.emails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sms, emails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubAccountDetailsResponsePlanInfoCredits {\n");
    sb.append("    sms: ").append(toIndentedString(sms)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `sms` to the URL query string
    if (getSms() != null) {
      try {
        joiner.add(String.format("%ssms%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSms()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `emails` to the URL query string
    if (getEmails() != null) {
      joiner.add(getEmails().toUrlQueryString(prefix + "emails" + suffix));
    }

    return joiner.toString();
  }

}


/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * AddSubscriptionMemberPayload
 */
@JsonPropertyOrder({
  AddSubscriptionMemberPayload.JSON_PROPERTY_CONTACT_ID,
  AddSubscriptionMemberPayload.JSON_PROPERTY_LOYALTY_SUBSCRIPTION_ID,
  AddSubscriptionMemberPayload.JSON_PROPERTY_MEMBER_CONTACT_IDS
})
@JsonTypeName("addSubscriptionMemberPayload")
public class AddSubscriptionMemberPayload {
  public static final String JSON_PROPERTY_CONTACT_ID = "contactId";
  @jakarta.annotation.Nullable
  private Integer contactId;

  public static final String JSON_PROPERTY_LOYALTY_SUBSCRIPTION_ID = "loyaltySubscriptionId";
  @jakarta.annotation.Nullable
  private String loyaltySubscriptionId;

  public static final String JSON_PROPERTY_MEMBER_CONTACT_IDS = "memberContactIds";
  @jakarta.annotation.Nonnull
  private List<Integer> memberContactIds = new ArrayList<>();

  public AddSubscriptionMemberPayload() {
  }

  public AddSubscriptionMemberPayload contactId(@jakarta.annotation.Nullable Integer contactId) {
    
    this.contactId = contactId;
    return this;
  }

  /**
   * Required if LoyaltySubscriptionId is not provided, must be greater than 0
   * @return contactId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getContactId() {
    return contactId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactId(@jakarta.annotation.Nullable Integer contactId) {
    this.contactId = contactId;
  }

  public AddSubscriptionMemberPayload loyaltySubscriptionId(@jakarta.annotation.Nullable String loyaltySubscriptionId) {
    
    this.loyaltySubscriptionId = loyaltySubscriptionId;
    return this;
  }

  /**
   * Required if ContactId is not provided, max length 64
   * @return loyaltySubscriptionId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOYALTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoyaltySubscriptionId() {
    return loyaltySubscriptionId;
  }


  @JsonProperty(JSON_PROPERTY_LOYALTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltySubscriptionId(@jakarta.annotation.Nullable String loyaltySubscriptionId) {
    this.loyaltySubscriptionId = loyaltySubscriptionId;
  }

  public AddSubscriptionMemberPayload memberContactIds(@jakarta.annotation.Nonnull List<Integer> memberContactIds) {
    
    this.memberContactIds = memberContactIds;
    return this;
  }

  public AddSubscriptionMemberPayload addMemberContactIdsItem(Integer memberContactIdsItem) {
    if (this.memberContactIds == null) {
      this.memberContactIds = new ArrayList<>();
    }
    this.memberContactIds.add(memberContactIdsItem);
    return this;
  }

  /**
   * Required, each item must be greater than or equal to 1
   * @return memberContactIds
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEMBER_CONTACT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Integer> getMemberContactIds() {
    return memberContactIds;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_CONTACT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemberContactIds(@jakarta.annotation.Nonnull List<Integer> memberContactIds) {
    this.memberContactIds = memberContactIds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddSubscriptionMemberPayload addSubscriptionMemberPayload = (AddSubscriptionMemberPayload) o;
    return Objects.equals(this.contactId, addSubscriptionMemberPayload.contactId) &&
        Objects.equals(this.loyaltySubscriptionId, addSubscriptionMemberPayload.loyaltySubscriptionId) &&
        Objects.equals(this.memberContactIds, addSubscriptionMemberPayload.memberContactIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactId, loyaltySubscriptionId, memberContactIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddSubscriptionMemberPayload {\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    loyaltySubscriptionId: ").append(toIndentedString(loyaltySubscriptionId)).append("\n");
    sb.append("    memberContactIds: ").append(toIndentedString(memberContactIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `contactId` to the URL query string
    if (getContactId() != null) {
      try {
        joiner.add(String.format("%scontactId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getContactId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `loyaltySubscriptionId` to the URL query string
    if (getLoyaltySubscriptionId() != null) {
      try {
        joiner.add(String.format("%sloyaltySubscriptionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLoyaltySubscriptionId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `memberContactIds` to the URL query string
    if (getMemberContactIds() != null) {
      for (int i = 0; i < getMemberContactIds().size(); i++) {
        try {
          joiner.add(String.format("%smemberContactIds%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getMemberContactIds().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    return joiner.toString();
  }

}


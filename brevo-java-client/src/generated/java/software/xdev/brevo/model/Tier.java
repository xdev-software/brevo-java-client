/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import software.xdev.brevo.model.TierAccessConditionsInner;
import software.xdev.brevo.model.TierTierRewardsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Tier
 */
@JsonPropertyOrder({
  Tier.JSON_PROPERTY_TIER_ID,
  Tier.JSON_PROPERTY_NAME,
  Tier.JSON_PROPERTY_IMAGE_REF,
  Tier.JSON_PROPERTY_LOYALTY_PROGRAM_ID,
  Tier.JSON_PROPERTY_GROUP_ID,
  Tier.JSON_PROPERTY_CREATED_AT,
  Tier.JSON_PROPERTY_UPDATED_AT,
  Tier.JSON_PROPERTY_ACCESS_CONDITIONS,
  Tier.JSON_PROPERTY_TIER_REWARDS
})
@JsonTypeName("tier")
public class Tier {
  public static final String JSON_PROPERTY_TIER_ID = "tierId";
  @jakarta.annotation.Nullable
  private UUID tierId;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_IMAGE_REF = "imageRef";
  @jakarta.annotation.Nullable
  private String imageRef;

  public static final String JSON_PROPERTY_LOYALTY_PROGRAM_ID = "loyaltyProgramId";
  @jakarta.annotation.Nullable
  private UUID loyaltyProgramId;

  public static final String JSON_PROPERTY_GROUP_ID = "groupId";
  @jakarta.annotation.Nullable
  private UUID groupId;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_ACCESS_CONDITIONS = "accessConditions";
  @jakarta.annotation.Nullable
  private List<TierAccessConditionsInner> accessConditions = new ArrayList<>();

  public static final String JSON_PROPERTY_TIER_REWARDS = "tierRewards";
  @jakarta.annotation.Nullable
  private List<TierTierRewardsInner> tierRewards = new ArrayList<>();

  public Tier() {
  }

  public Tier tierId(@jakarta.annotation.Nullable UUID tierId) {
    
    this.tierId = tierId;
    return this;
  }

  /**
   * Tier id
   * @return tierId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getTierId() {
    return tierId;
  }


  @JsonProperty(JSON_PROPERTY_TIER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTierId(@jakarta.annotation.Nullable UUID tierId) {
    this.tierId = tierId;
  }

  public Tier name(@jakarta.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Tier name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }

  public Tier imageRef(@jakarta.annotation.Nullable String imageRef) {
    
    this.imageRef = imageRef;
    return this;
  }

  /**
   * Tier image reference
   * @return imageRef
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageRef() {
    return imageRef;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageRef(@jakarta.annotation.Nullable String imageRef) {
    this.imageRef = imageRef;
  }

  public Tier loyaltyProgramId(@jakarta.annotation.Nullable UUID loyaltyProgramId) {
    
    this.loyaltyProgramId = loyaltyProgramId;
    return this;
  }

  /**
   * Associated loyalty program Id
   * @return loyaltyProgramId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOYALTY_PROGRAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getLoyaltyProgramId() {
    return loyaltyProgramId;
  }


  @JsonProperty(JSON_PROPERTY_LOYALTY_PROGRAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyProgramId(@jakarta.annotation.Nullable UUID loyaltyProgramId) {
    this.loyaltyProgramId = loyaltyProgramId;
  }

  public Tier groupId(@jakarta.annotation.Nullable UUID groupId) {
    
    this.groupId = groupId;
    return this;
  }

  /**
   * Associated group Id
   * @return groupId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getGroupId() {
    return groupId;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupId(@jakarta.annotation.Nullable UUID groupId) {
    this.groupId = groupId;
  }

  public Tier createdAt(@jakarta.annotation.Nullable OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(@jakarta.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Tier updatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Tier accessConditions(@jakarta.annotation.Nullable List<TierAccessConditionsInner> accessConditions) {
    
    this.accessConditions = accessConditions;
    return this;
  }

  public Tier addAccessConditionsItem(TierAccessConditionsInner accessConditionsItem) {
    if (this.accessConditions == null) {
      this.accessConditions = new ArrayList<>();
    }
    this.accessConditions.add(accessConditionsItem);
    return this;
  }

  /**
   * Conditions required to access this tier
   * @return accessConditions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TierAccessConditionsInner> getAccessConditions() {
    return accessConditions;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessConditions(@jakarta.annotation.Nullable List<TierAccessConditionsInner> accessConditions) {
    this.accessConditions = accessConditions;
  }

  public Tier tierRewards(@jakarta.annotation.Nullable List<TierTierRewardsInner> tierRewards) {
    
    this.tierRewards = tierRewards;
    return this;
  }

  public Tier addTierRewardsItem(TierTierRewardsInner tierRewardsItem) {
    if (this.tierRewards == null) {
      this.tierRewards = new ArrayList<>();
    }
    this.tierRewards.add(tierRewardsItem);
    return this;
  }

  /**
   * Rewards associated with this tier
   * @return tierRewards
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIER_REWARDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TierTierRewardsInner> getTierRewards() {
    return tierRewards;
  }


  @JsonProperty(JSON_PROPERTY_TIER_REWARDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTierRewards(@jakarta.annotation.Nullable List<TierTierRewardsInner> tierRewards) {
    this.tierRewards = tierRewards;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tier tier = (Tier) o;
    return Objects.equals(this.tierId, tier.tierId) &&
        Objects.equals(this.name, tier.name) &&
        Objects.equals(this.imageRef, tier.imageRef) &&
        Objects.equals(this.loyaltyProgramId, tier.loyaltyProgramId) &&
        Objects.equals(this.groupId, tier.groupId) &&
        Objects.equals(this.createdAt, tier.createdAt) &&
        Objects.equals(this.updatedAt, tier.updatedAt) &&
        Objects.equals(this.accessConditions, tier.accessConditions) &&
        Objects.equals(this.tierRewards, tier.tierRewards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tierId, name, imageRef, loyaltyProgramId, groupId, createdAt, updatedAt, accessConditions, tierRewards);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tier {\n");
    sb.append("    tierId: ").append(toIndentedString(tierId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    imageRef: ").append(toIndentedString(imageRef)).append("\n");
    sb.append("    loyaltyProgramId: ").append(toIndentedString(loyaltyProgramId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    accessConditions: ").append(toIndentedString(accessConditions)).append("\n");
    sb.append("    tierRewards: ").append(toIndentedString(tierRewards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `tierId` to the URL query string
    if (getTierId() != null) {
      try {
        joiner.add(String.format("%stierId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTierId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `name` to the URL query string
    if (getName() != null) {
      try {
        joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `imageRef` to the URL query string
    if (getImageRef() != null) {
      try {
        joiner.add(String.format("%simageRef%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getImageRef()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `loyaltyProgramId` to the URL query string
    if (getLoyaltyProgramId() != null) {
      try {
        joiner.add(String.format("%sloyaltyProgramId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLoyaltyProgramId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `groupId` to the URL query string
    if (getGroupId() != null) {
      try {
        joiner.add(String.format("%sgroupId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGroupId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `createdAt` to the URL query string
    if (getCreatedAt() != null) {
      try {
        joiner.add(String.format("%screatedAt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreatedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `updatedAt` to the URL query string
    if (getUpdatedAt() != null) {
      try {
        joiner.add(String.format("%supdatedAt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUpdatedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `accessConditions` to the URL query string
    if (getAccessConditions() != null) {
      for (int i = 0; i < getAccessConditions().size(); i++) {
        if (getAccessConditions().get(i) != null) {
          joiner.add(getAccessConditions().get(i).toUrlQueryString(String.format("%saccessConditions%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `tierRewards` to the URL query string
    if (getTierRewards() != null) {
      for (int i = 0; i < getTierRewards().size(); i++) {
        if (getTierRewards().get(i) != null) {
          joiner.add(getTierRewards().get(i).toUrlQueryString(String.format("%stierRewards%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}


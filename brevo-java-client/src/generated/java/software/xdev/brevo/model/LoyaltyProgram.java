/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * LoyaltyProgram
 */
@JsonPropertyOrder({
  LoyaltyProgram.JSON_PROPERTY_CODE_COUNT,
  LoyaltyProgram.JSON_PROPERTY_CREATED_AT,
  LoyaltyProgram.JSON_PROPERTY_DESCRIPTION,
  LoyaltyProgram.JSON_PROPERTY_DOCUMENT_ID,
  LoyaltyProgram.JSON_PROPERTY_ID,
  LoyaltyProgram.JSON_PROPERTY_META,
  LoyaltyProgram.JSON_PROPERTY_NAME,
  LoyaltyProgram.JSON_PROPERTY_PATTERN,
  LoyaltyProgram.JSON_PROPERTY_STATE,
  LoyaltyProgram.JSON_PROPERTY_SUBSCRIPTION_GENERATOR_ID,
  LoyaltyProgram.JSON_PROPERTY_SUBSCRIPTION_POOL_ID,
  LoyaltyProgram.JSON_PROPERTY_UPDATED_AT
})
@JsonTypeName("loyaltyProgram")
public class LoyaltyProgram {
  public static final String JSON_PROPERTY_CODE_COUNT = "codeCount";
  @jakarta.annotation.Nullable
  private Integer codeCount;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nullable
  private String createdAt;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_DOCUMENT_ID = "documentId";
  @jakarta.annotation.Nullable
  private String documentId;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_META = "meta";
  @jakarta.annotation.Nullable
  private Map<String, Object> meta = new HashMap<>();

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_PATTERN = "pattern";
  @jakarta.annotation.Nullable
  private String pattern;

  /**
   * Loyalty Program state
   */
  public enum StateEnum {
    INACTIVE(String.valueOf("inactive")),
    
    ACTIVE(String.valueOf("active"));

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  @jakarta.annotation.Nullable
  private StateEnum state;

  public static final String JSON_PROPERTY_SUBSCRIPTION_GENERATOR_ID = "subscriptionGeneratorId";
  @jakarta.annotation.Nullable
  private String subscriptionGeneratorId;

  public static final String JSON_PROPERTY_SUBSCRIPTION_POOL_ID = "subscriptionPoolId";
  @jakarta.annotation.Nullable
  private String subscriptionPoolId;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nullable
  private String updatedAt;

  public LoyaltyProgram() {
  }

  public LoyaltyProgram codeCount(@jakarta.annotation.Nullable Integer codeCount) {
    
    this.codeCount = codeCount;
    return this;
  }

  /**
   * Loyalty Program code count
   * @return codeCount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCodeCount() {
    return codeCount;
  }


  @JsonProperty(JSON_PROPERTY_CODE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeCount(@jakarta.annotation.Nullable Integer codeCount) {
    this.codeCount = codeCount;
  }

  public LoyaltyProgram createdAt(@jakarta.annotation.Nullable String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Loyalty Program creation date
   * @return createdAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(@jakarta.annotation.Nullable String createdAt) {
    this.createdAt = createdAt;
  }

  public LoyaltyProgram description(@jakarta.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Loyalty Program description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }

  public LoyaltyProgram documentId(@jakarta.annotation.Nullable String documentId) {
    
    this.documentId = documentId;
    return this;
  }

  /**
   * string
   * @return documentId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentId() {
    return documentId;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentId(@jakarta.annotation.Nullable String documentId) {
    this.documentId = documentId;
  }

  public LoyaltyProgram id(@jakarta.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Loyalty Program ID
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }

  public LoyaltyProgram meta(@jakarta.annotation.Nullable Map<String, Object> meta) {
    
    this.meta = meta;
    return this;
  }

  public LoyaltyProgram putMetaItem(String key, Object metaItem) {
    if (this.meta == null) {
      this.meta = new HashMap<>();
    }
    this.meta.put(key, metaItem);
    return this;
  }

  /**
   * Loyalty Program meta data
   * @return meta
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeta(@jakarta.annotation.Nullable Map<String, Object> meta) {
    this.meta = meta;
  }

  public LoyaltyProgram name(@jakarta.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Loyalty Program name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }

  public LoyaltyProgram pattern(@jakarta.annotation.Nullable String pattern) {
    
    this.pattern = pattern;
    return this;
  }

  /**
   * string
   * @return pattern
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPattern() {
    return pattern;
  }


  @JsonProperty(JSON_PROPERTY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPattern(@jakarta.annotation.Nullable String pattern) {
    this.pattern = pattern;
  }

  public LoyaltyProgram state(@jakarta.annotation.Nullable StateEnum state) {
    
    this.state = state;
    return this;
  }

  /**
   * Loyalty Program state
   * @return state
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(@jakarta.annotation.Nullable StateEnum state) {
    this.state = state;
  }

  public LoyaltyProgram subscriptionGeneratorId(@jakarta.annotation.Nullable String subscriptionGeneratorId) {
    
    this.subscriptionGeneratorId = subscriptionGeneratorId;
    return this;
  }

  /**
   * Loyalty Program subscription generator ID
   * @return subscriptionGeneratorId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_GENERATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubscriptionGeneratorId() {
    return subscriptionGeneratorId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_GENERATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionGeneratorId(@jakarta.annotation.Nullable String subscriptionGeneratorId) {
    this.subscriptionGeneratorId = subscriptionGeneratorId;
  }

  public LoyaltyProgram subscriptionPoolId(@jakarta.annotation.Nullable String subscriptionPoolId) {
    
    this.subscriptionPoolId = subscriptionPoolId;
    return this;
  }

  /**
   * Loyalty Program subscription pool ID
   * @return subscriptionPoolId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_POOL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubscriptionPoolId() {
    return subscriptionPoolId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_POOL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPoolId(@jakarta.annotation.Nullable String subscriptionPoolId) {
    this.subscriptionPoolId = subscriptionPoolId;
  }

  public LoyaltyProgram updatedAt(@jakarta.annotation.Nullable String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Loyalty Program last modification date
   * @return updatedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(@jakarta.annotation.Nullable String updatedAt) {
    this.updatedAt = updatedAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyProgram loyaltyProgram = (LoyaltyProgram) o;
    return Objects.equals(this.codeCount, loyaltyProgram.codeCount) &&
        Objects.equals(this.createdAt, loyaltyProgram.createdAt) &&
        Objects.equals(this.description, loyaltyProgram.description) &&
        Objects.equals(this.documentId, loyaltyProgram.documentId) &&
        Objects.equals(this.id, loyaltyProgram.id) &&
        Objects.equals(this.meta, loyaltyProgram.meta) &&
        Objects.equals(this.name, loyaltyProgram.name) &&
        Objects.equals(this.pattern, loyaltyProgram.pattern) &&
        Objects.equals(this.state, loyaltyProgram.state) &&
        Objects.equals(this.subscriptionGeneratorId, loyaltyProgram.subscriptionGeneratorId) &&
        Objects.equals(this.subscriptionPoolId, loyaltyProgram.subscriptionPoolId) &&
        Objects.equals(this.updatedAt, loyaltyProgram.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codeCount, createdAt, description, documentId, id, meta, name, pattern, state, subscriptionGeneratorId, subscriptionPoolId, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyProgram {\n");
    sb.append("    codeCount: ").append(toIndentedString(codeCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    subscriptionGeneratorId: ").append(toIndentedString(subscriptionGeneratorId)).append("\n");
    sb.append("    subscriptionPoolId: ").append(toIndentedString(subscriptionPoolId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `codeCount` to the URL query string
    if (getCodeCount() != null) {
      try {
        joiner.add(String.format("%scodeCount%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCodeCount()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `createdAt` to the URL query string
    if (getCreatedAt() != null) {
      try {
        joiner.add(String.format("%screatedAt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreatedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      try {
        joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `documentId` to the URL query string
    if (getDocumentId() != null) {
      try {
        joiner.add(String.format("%sdocumentId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDocumentId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `meta` to the URL query string
    if (getMeta() != null) {
      for (String _key : getMeta().keySet()) {
        try {
          joiner.add(String.format("%smeta%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
              getMeta().get(_key), URLEncoder.encode(String.valueOf(getMeta().get(_key)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `name` to the URL query string
    if (getName() != null) {
      try {
        joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `pattern` to the URL query string
    if (getPattern() != null) {
      try {
        joiner.add(String.format("%spattern%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPattern()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `state` to the URL query string
    if (getState() != null) {
      try {
        joiner.add(String.format("%sstate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getState()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `subscriptionGeneratorId` to the URL query string
    if (getSubscriptionGeneratorId() != null) {
      try {
        joiner.add(String.format("%ssubscriptionGeneratorId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubscriptionGeneratorId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `subscriptionPoolId` to the URL query string
    if (getSubscriptionPoolId() != null) {
      try {
        joiner.add(String.format("%ssubscriptionPoolId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubscriptionPoolId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `updatedAt` to the URL query string
    if (getUpdatedAt() != null) {
      try {
        joiner.add(String.format("%supdatedAt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUpdatedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}


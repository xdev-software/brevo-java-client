/*
 * Brevo API
 * Brevo API documentation by XDEV Software based on https://api.brevo.com/v3/swagger_definition_v3.yml
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.xdev.brevo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import software.xdev.brevo.model.GetAccountAllOfMarketingAutomation;
import software.xdev.brevo.model.GetAccountAllOfPlan;
import software.xdev.brevo.model.GetAccountAllOfRelay;
import software.xdev.brevo.model.GetExtendedClientAllOfAddress;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * GetAccount
 */
@JsonPropertyOrder({
  GetAccount.JSON_PROPERTY_EMAIL,
  GetAccount.JSON_PROPERTY_FIRST_NAME,
  GetAccount.JSON_PROPERTY_LAST_NAME,
  GetAccount.JSON_PROPERTY_COMPANY_NAME,
  GetAccount.JSON_PROPERTY_ADDRESS,
  GetAccount.JSON_PROPERTY_PLAN,
  GetAccount.JSON_PROPERTY_RELAY,
  GetAccount.JSON_PROPERTY_MARKETING_AUTOMATION
})
@JsonTypeName("getAccount")
public class GetAccount {
  public static final String JSON_PROPERTY_EMAIL = "email";
  @jakarta.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  @jakarta.annotation.Nonnull
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  @jakarta.annotation.Nonnull
  private String lastName;

  public static final String JSON_PROPERTY_COMPANY_NAME = "companyName";
  @jakarta.annotation.Nonnull
  private String companyName;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @jakarta.annotation.Nonnull
  private GetExtendedClientAllOfAddress address;

  public static final String JSON_PROPERTY_PLAN = "plan";
  @jakarta.annotation.Nonnull
  private List<GetAccountAllOfPlan> plan = new ArrayList<>();

  public static final String JSON_PROPERTY_RELAY = "relay";
  @jakarta.annotation.Nonnull
  private GetAccountAllOfRelay relay;

  public static final String JSON_PROPERTY_MARKETING_AUTOMATION = "marketingAutomation";
  @jakarta.annotation.Nullable
  private GetAccountAllOfMarketingAutomation marketingAutomation;

  public GetAccount() {
  }

  public GetAccount email(@jakarta.annotation.Nonnull String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Login Email
   * @return email
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@jakarta.annotation.Nonnull String email) {
    this.email = email;
  }

  public GetAccount firstName(@jakarta.annotation.Nonnull String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * First Name
   * @return firstName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(@jakarta.annotation.Nonnull String firstName) {
    this.firstName = firstName;
  }

  public GetAccount lastName(@jakarta.annotation.Nonnull String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Last Name
   * @return lastName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(@jakarta.annotation.Nonnull String lastName) {
    this.lastName = lastName;
  }

  public GetAccount companyName(@jakarta.annotation.Nonnull String companyName) {
    
    this.companyName = companyName;
    return this;
  }

  /**
   * Name of the company
   * @return companyName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCompanyName() {
    return companyName;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyName(@jakarta.annotation.Nonnull String companyName) {
    this.companyName = companyName;
  }

  public GetAccount address(@jakarta.annotation.Nonnull GetExtendedClientAllOfAddress address) {
    
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GetExtendedClientAllOfAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddress(@jakarta.annotation.Nonnull GetExtendedClientAllOfAddress address) {
    this.address = address;
  }

  public GetAccount plan(@jakarta.annotation.Nonnull List<GetAccountAllOfPlan> plan) {
    
    this.plan = plan;
    return this;
  }

  public GetAccount addPlanItem(GetAccountAllOfPlan planItem) {
    if (this.plan == null) {
      this.plan = new ArrayList<>();
    }
    this.plan.add(planItem);
    return this;
  }

  /**
   * Information about your plans and credits
   * @return plan
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GetAccountAllOfPlan> getPlan() {
    return plan;
  }


  @JsonProperty(JSON_PROPERTY_PLAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlan(@jakarta.annotation.Nonnull List<GetAccountAllOfPlan> plan) {
    this.plan = plan;
  }

  public GetAccount relay(@jakarta.annotation.Nonnull GetAccountAllOfRelay relay) {
    
    this.relay = relay;
    return this;
  }

  /**
   * Get relay
   * @return relay
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RELAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GetAccountAllOfRelay getRelay() {
    return relay;
  }


  @JsonProperty(JSON_PROPERTY_RELAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRelay(@jakarta.annotation.Nonnull GetAccountAllOfRelay relay) {
    this.relay = relay;
  }

  public GetAccount marketingAutomation(@jakarta.annotation.Nullable GetAccountAllOfMarketingAutomation marketingAutomation) {
    
    this.marketingAutomation = marketingAutomation;
    return this;
  }

  /**
   * Get marketingAutomation
   * @return marketingAutomation
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MARKETING_AUTOMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetAccountAllOfMarketingAutomation getMarketingAutomation() {
    return marketingAutomation;
  }


  @JsonProperty(JSON_PROPERTY_MARKETING_AUTOMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketingAutomation(@jakarta.annotation.Nullable GetAccountAllOfMarketingAutomation marketingAutomation) {
    this.marketingAutomation = marketingAutomation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccount getAccount = (GetAccount) o;
    return Objects.equals(this.email, getAccount.email) &&
        Objects.equals(this.firstName, getAccount.firstName) &&
        Objects.equals(this.lastName, getAccount.lastName) &&
        Objects.equals(this.companyName, getAccount.companyName) &&
        Objects.equals(this.address, getAccount.address) &&
        Objects.equals(this.plan, getAccount.plan) &&
        Objects.equals(this.relay, getAccount.relay) &&
        Objects.equals(this.marketingAutomation, getAccount.marketingAutomation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, firstName, lastName, companyName, address, plan, relay, marketingAutomation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccount {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    relay: ").append(toIndentedString(relay)).append("\n");
    sb.append("    marketingAutomation: ").append(toIndentedString(marketingAutomation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `email` to the URL query string
    if (getEmail() != null) {
      try {
        joiner.add(String.format("%semail%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEmail()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `firstName` to the URL query string
    if (getFirstName() != null) {
      try {
        joiner.add(String.format("%sfirstName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFirstName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `lastName` to the URL query string
    if (getLastName() != null) {
      try {
        joiner.add(String.format("%slastName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `companyName` to the URL query string
    if (getCompanyName() != null) {
      try {
        joiner.add(String.format("%scompanyName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCompanyName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `address` to the URL query string
    if (getAddress() != null) {
      joiner.add(getAddress().toUrlQueryString(prefix + "address" + suffix));
    }

    // add `plan` to the URL query string
    if (getPlan() != null) {
      for (int i = 0; i < getPlan().size(); i++) {
        if (getPlan().get(i) != null) {
          joiner.add(getPlan().get(i).toUrlQueryString(String.format("%splan%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `relay` to the URL query string
    if (getRelay() != null) {
      joiner.add(getRelay().toUrlQueryString(prefix + "relay" + suffix));
    }

    // add `marketingAutomation` to the URL query string
    if (getMarketingAutomation() != null) {
      joiner.add(getMarketingAutomation().toUrlQueryString(prefix + "marketingAutomation" + suffix));
    }

    return joiner.toString();
  }

}

